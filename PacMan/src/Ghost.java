import java.util.ArrayList;import info.gridworld.grid.Grid;import java.awt.Color;/** * The characters that will eliminate the Pacman. *  * @author John Zeng * @version 3/25/2020 */public class Ghost extends Character{    private static int direction = Location.NORTH;     private MyBoundedGrid<Block> gr;    Block curr;    /**     * Constructor for class Ghost     *      * @param grid the grid that the ghost is in     * @parma c the block that this ghost is standing on     */    public Ghost(MyBoundedGrid<Block> grid)    {        setColor(Color.CYAN);          gr = grid;    }    /**     * Sets the block that the ghost is standing on.     *      * @param c the block that the ghost is standing on     */    public void setCurr(Block c)    {        curr = c;    }    /**     * Turns the ghost to face a random direction.     */    public void turn()    {        int random = (int)(Math.random()*4)+1;        if(random == 1)            setDirection(Location.EAST);        if(random == 2)            setDirection(Location.WEST);        if(random == 3)            setDirection(Location.SOUTH);        if(random == 4)            setDirection(Location.NORTH);    }    /**     * Moves one block in the current direction.     */    public void chase()    {        Location loc = getLocation();        Location next = loc.getAdjacentLocation(getDirection());        Block neighbor = gr.get(next);        while(neighbor instanceof Wall || neighbor instanceof Character)        {            turn();            next = loc.getAdjacentLocation(getDirection());            neighbor = gr.get(next);        }        move();    }    /**     * Moves the block in its current direction.     *      */    public void move()    {        Location old = getLocation();        Location newLoc = old.getAdjacentLocation(getDirection());        Block temp = gr.get(newLoc);        Location farLeft = new Location(16,1);        Location farRight = new Location(16,25);        if(gr.isValid(newLoc) && (temp == null || temp instanceof Collectible))        {            removeSelfFromGrid();            putSelfInGrid(gr, newLoc);            if(newLoc.equals(farLeft))            {                temp = gr.get(farRight);                moveTo(farRight);            }            else if(newLoc.equals(farRight))            {                temp = gr.get(farLeft);                moveTo(farLeft);            }            if(curr != null)                curr.putSelfInGrid(gr,old);            curr = temp;        }    }}